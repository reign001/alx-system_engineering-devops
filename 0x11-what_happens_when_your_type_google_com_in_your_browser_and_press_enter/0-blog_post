WHAT HAPPENS WHEN YOU TYPE HTTPS://WWW.GOOGLE.COM IN YOUR WEB BROWSER AND PRESS ENTER?
To begin with, let us get a glimpse into “https://www.google.com.” this is in reality a url (Unifor Resource Locator) which helps us locate a particular resources on the internet. Every url is made up of a protocol, a subdomain, a domain, a file-path, and sometimes, a port.
The url is typed into the search bar of a web browser (an application which is used to browse the internet) example, firefox, maxilla, chrome etc. this application is hosted on a system (server). The other part of the url, that is “www.google.com”. which is the domain name is also a program which is hosted on a system (server) somewhere and connected to a database.
The system (server) on which the application is hosted will need to establish a connection with our system (server) on which the web browser is hosted once the url is typed and the enter key is pressed. To establish this connection (communication), each system is equipped with a sequence of number called IP (Internet Protocol) which could be dynamic or static. There are two mains types of IP’S, they include IPV4 and IPV6. Although both offer same functionalities, they differ in the sequence of numbers. 
THE DNS (Domain Name Server): the url is sent to a DNS and a DNS Resolution (The Conversion of the URL form a human readable form to a series of numbers only readable by the system) follows immediately. This is what makes it possible for the host’s server to communicate with the client’s server. There are basically four DNS servers which take part in loading a url page. They are 1. The DNS Recursor: this is the server which is built to receive the queries from the client’s server. Queries are sent through applications such as web browsers. The Recursive DNS further however makes further request to the 2. Rootname Server: This is where the first translation takes place. This server takes the rootname and returns a list of authoritative Rootname servers. The Rootname Server further takes sends a request to the 3. TOP Level Domain-name Server: this is the next step in the search for a specific IP address. It host the last portion of a domain name, example “com” in www.google.com . this server makes a further request to the 4. Authoritative Name Server. This is the final server in which a domain name can be translated to the IP address. If this server gets access to what was requested, it will return an IP address to the DNS Recursor which made the first request. When the IP address is fetched is fetched, further communication occurs between the devices on the internet (this includes the client and the host servers). This is where the concept of TCP/IP (Transmission Control Protocol and Internet Protocol) comes in. TCP/IP is a set of standardized rules which allows systems to communicate on the internet. This set of standardized rules tell the different systems (servers) How to start a communication, when to start a communication, how to know if each communication was transferred rightly and how to end a communication. Once the IP our url (https://www.google.com) is found by the DNS, the TCP comes in to deliver the content in the IP. The TCP was developed by the US Department of Defense to specify how datas are transferred from one computer to another. It puts so much emphacy on accuracy and has several steps in ensuring that data are transmitted correctly between two computers. One way in which it does this is by breaking the data into tiny bits called PACKETS. If the whole data was to be sent as one pack, should it encounter any problem, the whole data would need to be resent again, hence the need to break the data into bits. These packets could be sent through different routes to the client if a route is unavailable or congested. TCP divides communication into layers with each layer having different functions. There are four layers which data go through before is received. The purpose of this layer is to keep the standard without the need for hardware and software developers to manage communication between devices on their own. The first layer is called the DATALINK/NETWORK INTERFACE/PHYSICAL LAYER. This handles the physical part of sending and receiving data. This layer includes the cables, wireless network, computer drives. The second layer is the NETWORK /INTERNET LAYER. This layer takes charge of controlling packets on the internet. The third layer is the TRANSPORT LAYER. This layer establishes reliable connection between two devices. It ensures the data divided into packets are transferred between the devices. The fourth layer is the APPLICATION LAYER. This is what the users typically interact with. This is also the group of application which requests network connection. For the client to receive the data, the process is reversed. APPLICATION LAAYER >> TRANSPORT LAYER >> INTERNET LAYER >> PHYSICAL LAYER. 
For communications to be accurate between devices, there is what is called FIREWALL. This provides security for networks by monitoring incoming and outgoing traffics and deciding which traffic passes and which traffic is blocked. It does this based on a set of defined rules. Basically, a firewall acts as a protective wall between a private internal network and a public internet. In this case, our request to access https://www.google.com has to pass through and scrutinized by a set of rules defined by the organization which hosts our url. Firewall can be a hardware or software. Firewalls are vital components of internet security.
HTTPS/SSL as seen in our url – https://....google, the first part of our url is the https; which stands for Hypertext Transfer Protocol Secure. This provides extra security by encrypting data transmitted between servers. Another protocol which provides similar security is the SSL (Secure Socket Layer). This provides security through what is called asymmetric public key infrastructure. HTTPS is actually HTTP with a TSL/SSL encryption. The HTTP listens for incoming request through port 80. A more secure HTTPS listens for incoming request via port 443.
LOAD BALANCER: If the server which hosts the program we intent to access when we type in our url is equipped with a load balancer, then the load balancer will first accept our url in the form of an IP before sending it to the server. A load balancer is a device that efficiently distributes incoming traffic across a group of servers. The load balancer sits in front of the servers at the backend. The load balancer receives our url, checks for a server that is not overloaded and performing at its best, sends in the traffic. A load balancer acts as a traffic control in front of servers routing clients request across servers.
WEB SERVER: A web server serves the browser. It stores file, delivers them to browsers. Its makes websites accessible to clients (users). The sites we intend to access is a set of program written and saved somewhere in a server (system). Without a web server, it will be impossible to access this program even with the best web browsers. The web server returns our HTTP request (url) in the form of a HTML document.
APPLICATION SERVER: This ia a computer program that ats as a mediator between users requests and an organization’s backend applications or database. An application server basically is used for complex applications or processes. For instance, the request to access www.googles’s database can only be handled via the programs application server. The types however is outside the scope of this work.
DATABASES: Making request to access an application, in most cases is actually making a digital plea to get information(s) that is(are) stored in the application’s information bank. This information bank is what is referred to as a database. A database is a collection of information is well structured and organized and stored in a computer system. To access a database, the request must pass through a database management system (DBMS).
